{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","value","placeholder","onChange","event","target","rows","newText","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","rel","App","setMode","body","style","color","backgroundColor","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a12db8b0.chunk.js","sourcesContent":["import React from \"react\";\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            TextUtils\r\n          </a>\r\n\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            <div className=\"form-check form-switch\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                onClick={props.toggleMode}\r\n                id=\"flexSwitchCheckDefault\"\r\n              />\r\n              <label\r\n                className={`form-check-label text-${\r\n                  props.mode === \"light\" ? \"dark\" : \"light\"\r\n                }`}\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              >\r\n                Enable Dark Mode\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n","import {useState} from \"react\";\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\n  const handleUpCase = () => {\r\n    // console.log(\"UpperCase was clicked\" +text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n  };\r\n\r\n  const handleLoCase = () => {\r\n    // console.log(\"UpperCase was clicked\" +text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n  };\r\n\r\n  const handleClear = () => {\r\n    // console.log(\"UpperCase was clicked\" +text);\r\n    let newText = \"\";\r\n    setText(newText);\r\n  };\r\n\r\n  const handleExtraSpace = () => {\r\n    // console.log(\"UpperCase was clicked\" +text);\r\n    let newText = text.split(/[  ]+/);\r\n    setText(newText.join(\" \"));\r\n  };\r\n\r\n\r\n  const handleCopy = () => {\r\n    var text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n  }   \r\n\r\n\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"On Change\")\r\n    setText(event.target.value);\r\n  };\r\n\r\n \r\nconst [text, setText] = useState('');\r\n  return (\r\n    <>\r\n    <div>\r\n        <div className=\"container\">\r\n          <h1>Enter the text to analyse.</h1>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"myBox\" className=\"form-label\"></label>\r\n            <textarea\r\n              value={text}\r\n              placeholder=\"Enter Your Text Here\"\r\n              onChange={handleOnChange}\r\n              className=\"form-control\"\r\n              id=\"myBox\"\r\n              rows=\"4\"\r\n            ></textarea>\r\n          </div>\r\n          <button className=\"btn my-2 mx-3 btn-success\" onClick={handleUpCase}>\r\n            Convert To UpperCase\r\n          </button>\r\n          <button className=\"btn my-2 btn-success mx-3\" onClick={handleLoCase}>\r\n            Convert To LowerCase\r\n          </button>\r\n          <button className=\"btn my-2 btn-success mx-3\" onClick={handleClear}>\r\n            Clear Text\r\n          </button>\r\n          <button className=\"btn my-2 btn-success mx-3\" onClick={handleCopy}>\r\n            Copy Text\r\n          </button>\r\n          <button className=\"btn my-2 btn-success mx-3\" onClick={handleExtraSpace}>\r\n            Remove Extra Spaces\r\n          </button>\r\n        </div>\r\n        <div className=\"container my-3\">\r\n          <h2>Your Text Summary</h2>\r\n          <p>\r\n            {text.split(\" \").length} Words and {text.length} Characters\r\n          </p>\r\n          <p>{0.008 * text.split(\" \").length}Minutes Read</p>\r\n          <h2>Preview</h2>\r\n          <p>{text.length>0?text:\"Enter something in the text box to preview it here.\"}</p>\r\n        </div>\r\n        <footer>\r\n          <center>\r\n            <h3>\r\n              Developed By{\" \"}\r\n              <a\r\n                rel=\"noreferrer\"\r\n                href=\"https://www.instagram.com/_krishgupta1_/\"\r\n                target=\"_blank\"\r\n              >\r\n                Krish Gupta\r\n              </a>\r\n            </h3>\r\n          </center>\r\n        </footer>\r\n      </div>\r\n   </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\n\nimport Navbar from \"./components/Navbar.js\";\nimport TextForm from \"./components/TextForm.js\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.color = \"white\";\n      document.body.style.backgroundColor = \"#06230e\";\n      document.title = \"TextUtils - Dark Mode\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"black\";\n      document.title = \"TextUtils - Light Mode\";\n    }\n  };\n  return (\n    <>\n      <Navbar mode={mode} toggleMode={toggleMode} />\n      <div className=\"container my-3\">\n        <TextForm />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}